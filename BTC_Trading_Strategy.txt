//@version=5
strategy("Adaptive Volatility Breakout [Reversal Enabled]",
         shorttitle="AVB-R",
         overlay=true,
         initial_capital=100000,
         commission_value=0.1,
         commission_type=strategy.commission.percent,
         default_qty_type=strategy.percent_of_equity,
         default_qty_value=99)

// ---- DATE RANGE ----
start_date = input.time(timestamp("01 Jan 2020 00:00"), title="Start Date")
end_date = input.time(timestamp("31 Dec 2025 23:59"), title="End Date")
in_date_range = time >= start_date and time <= end_date

// ---- STRATEGY PARAMETERS ----
lookback_period = input.int(20, "Lookback Period")
range_mult = input.float(0.5, "Range Multiplier")
stop_loss_mult = input.float(2.5, "Stop Loss ATR Multiplier")
atr_period = 14

// ---- CALCULATIONS ----
highest_high = ta.highest(high, lookback_period)[1]
lowest_low = ta.lowest(low, lookback_period)[1]
breakout_range = highest_high - lowest_low
upper_boundary = open + breakout_range * range_mult
lower_boundary = open - breakout_range * range_mult
atr = ta.atr(atr_period)

// ---- STRATEGY LOGIC ----
go_long = high > upper_boundary and in_date_range
go_short = low < lower_boundary and in_date_range

// ---- EXECUTION (REVERSAL ENABLED) ----
// If a long signal appears, close any short and immediately go long.
if go_long
    strategy.close("Short", comment="Reverse to Long")
    strategy.entry("Long", strategy.long)

// If a short signal appears, close any long and immediately go short.
if go_short
    strategy.close("Long", comment="Reverse to Short")
    strategy.entry("Short", strategy.short)

// ---- EXIT LOGIC ----
long_stop_price = strategy.position_avg_price - atr * stop_loss_mult
short_stop_price = strategy.position_avg_price + atr * stop_loss_mult

if strategy.position_size > 0
    strategy.exit("SL Long", stop=long_stop_price)
if strategy.position_size < 0
    strategy.exit("SL Short", stop=short_stop_price)

if (time >= end_date)
    strategy.close_all(comment = "End of Date Range")

// ---- PLOTTING ----
plot(strategy.position_size == 0 ? upper_boundary : na, "Upper Boundary", color=color.new(color.green, 0))
plot(strategy.position_size == 0 ? lower_boundary : na, "Lower Boundary", color=color.new(color.red, 0))
bgcolor(in_date_range ? color.new(color.blue, 90) : na, title="Date Range")
